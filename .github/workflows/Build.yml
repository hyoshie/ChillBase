name: Build project

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: iOS Release
            targetPlatform: iOS
            buildProfile: 'Assets/Settings/Build Profiles/iOS Release.asset'       # ←必要なら実パスに変更
          - name: Android Release
            targetPlatform: Android
            buildProfile: 'Assets/Settings/Build Profiles/Android Release.asset'   # ←必要なら実パスに変更

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      - if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.1

      # Build Profile 指定（iOS/Android 共通）
      - name: Unity Builder (Build Profile)
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          buildProfile:  ${{ matrix.buildProfile }}

      # iOSの出力をその場で確認（期待する固定パスに無ければ即エラー）
      - name: Assert iOS Xcode project exists
        if: ${{ matrix.targetPlatform == 'iOS' }}
        run: |
          echo "After Unity build, tree under build/:"
          ls -laR build || true
          test -e "build/iOS/Unity-iPhone.xcodeproj" || (echo "::error::Expected Xcode project at build/iOS/Unity-iPhone.xcodeproj not found. Check iOS Build Profile (Export Xcode Project=ON, Output Path=build/iOS, Project name=Unity-iPhone)" && exit 1)

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
          if-no-files-found: error

  # ▼ iOS を TestFlight にアップロードする macOS ジョブ
  upload_ios_testflight:
    needs: buildForAllSupportedPlatforms
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: Download iOS artifact
        uses: actions/download-artifact@v4
        with:
          name: Build-iOS
          # 固定：build/iOS に展開（Fastlane も同じ場所を見る）
          path: build/iOS

      - name: Show extracted iOS artifact tree
        run: |
          echo "PWD: $(pwd)"
          ls -laR build/iOS || true

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Upload to TestFlight with Fastlane
        env:
          APPSTORE_KEY_ID:     ${{ secrets.APPSTORE_KEY_ID }}
          APPSTORE_ISSUER_ID:  ${{ secrets.APPSTORE_ISSUER_ID }}
          APPSTORE_P8:         ${{ secrets.APPSTORE_P8 }}
          MATCH_REPOSITORY:    ${{ secrets.MATCH_REPOSITORY }}
          GH_PAT:              ${{ secrets.GH_PAT }}
          MATCH_PASSWORD:      ${{ secrets.MATCH_PASSWORD }}
          IOS_BUNDLE_ID:       ${{ secrets.IOS_BUNDLE_ID }}
        run: |
          bundle exec fastlane ios beta
