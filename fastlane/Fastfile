default_platform(:ios)

platform :ios do
  lane :beta do
    # CI向け: Keychain 等の前処理
    setup_ci

    api_key = app_store_connect_api_key(
      key_id: ENV["APPSTORE_KEY_ID"],
      issuer_id: ENV["APPSTORE_ISSUER_ID"],
      key_content: ENV["APPSTORE_P8"],
      is_key_content_base64: false
    )

    # 認証付きURL（ios-certs へアクセス）
    actor = ENV['GITHUB_ACTOR']
    pat   = ENV['GH_PAT']
    repo  = ENV['MATCH_REPOSITORY']  # 例: yshima42/ios-certs
    authed_git_url = "https://#{actor}:#{pat}@github.com/#{repo}.git"

    match(
      type: "appstore",
      api_key: api_key,
      git_url: authed_git_url,
      git_branch: "main",
      readonly: true
    )

    # 任意: ビルド番号自動 +1（重複防止）
    begin
      increment_build_number(xcodeproj: "build/iOS/Unity-iPhone.xcodeproj")
    rescue
      UI.important("increment_build_number skipped")
    end

    # 固定パスでXcodeビルド（Build Profileの出力を build/iOS に固定しておく）
    build_app(
      project: "build/iOS/Unity-iPhone.xcodeproj",
      scheme:  "Unity-iPhone",
      export_method: "app-store"
    )

    upload_to_testflight(
      api_key: api_key,
      skip_waiting_for_build_processing: true
    )
  end

  # 初回の証明書作成・保存用（one-time）
  desc "Create certs & profiles to MATCH_REPOSITORY (one-time)"
  lane :setup_certs do
    api_key = app_store_connect_api_key(
      key_id: ENV["APPSTORE_KEY_ID"],
      issuer_id: ENV["APPSTORE_ISSUER_ID"],
      key_content: ENV["APPSTORE_P8"],
      is_key_content_base64: false
    )

    actor = ENV['GITHUB_ACTOR']
    pat   = ENV['GH_PAT']
    repo  = ENV['MATCH_REPOSITORY']
    authed_git_url = "https://#{actor}:#{pat}@github.com/#{repo}.git"

    match(
      type: "appstore",
      api_key: api_key,
      git_url: authed_git_url,
      git_branch: "main",
      readonly: false   # ← 初回だけ new/更新を許可
    )
  end
end
