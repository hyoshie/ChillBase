default_platform(:ios)

platform :ios do
  lane :beta do
    api_key = app_store_connect_api_key(
      key_id: ENV["APPSTORE_KEY_ID"],
      issuer_id: ENV["APPSTORE_ISSUER_ID"],
      key_content: ENV["APPSTORE_P8"],
      is_key_content_base64: false
    )

    # 認証付きURLを組み立て（GH_PAT を使う）
    actor = ENV['GITHUB_ACTOR']      # Actions が自動で入れる実行ユーザー名
    pat   = ENV['GH_PAT']            # Secrets の GH_PAT
    repo  = ENV['MATCH_REPOSITORY']  # 例: yshima42/ios-certs
    authed_git_url = "https://#{actor}:#{pat}@github.com/#{repo}.git"

    match(
      type: "appstore",
      api_key: api_key,
      git_url: authed_git_url,   # ← 認証付きURL
      git_branch: "main",        # ← デフォルトmaster対策
      readonly: true             # ← 読み取り専用（通常の配布時はこちら）
    )

    build_app(
      project: "build/iOS/Unity-iPhone.xcodeproj",
      scheme: "Unity-iPhone",
      export_method: "app-store"
    )

    upload_to_testflight(
      api_key: api_key,
      skip_waiting_for_build_processing: true
    )
  end

  # 👇 初回の証明書作成・保存用（one-time）
  desc "Create certs & profiles to MATCH_REPOSITORY (one-time)"
  lane :setup_certs do
    api_key = app_store_connect_api_key(
      key_id: ENV["APPSTORE_KEY_ID"],
      issuer_id: ENV["APPSTORE_ISSUER_ID"],
      key_content: ENV["APPSTORE_P8"],
      is_key_content_base64: false
    )

    actor = ENV['GITHUB_ACTOR']
    pat   = ENV['GH_PAT']
    repo  = ENV['MATCH_REPOSITORY']
    authed_git_url = "https://#{actor}:#{pat}@github.com/#{repo}.git"

    match(
      type: "appstore",
      api_key: api_key,
      git_url: authed_git_url,
      git_branch: "main",
      readonly: false             # ← 作成＆保存（初回だけこれ）
    )
  end
end
